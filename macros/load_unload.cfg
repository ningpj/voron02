#####################################################################
[gcode_macro load_filament] ; basic load at min or greater temp (Note: coded 
; like this as you cant dynamically change jinga2 vars during a macro)
#####################################################################

gcode:
  SAVE_GCODE_STATE NAME=__load_filament

  ; if target temp is <= minimum extrusion temp + 10c to work with, heat HE0 to minimum
  {% if printer.extruder.temperature <= printer["gcode_macro _MY_VARIABLES"].print_min_extrusion_temp|int %}
     _MSG M118='Heating Extruder to minimum extrude temp [{printer["gcode_macro _MY_VARIABLES"].print_min_extrusion_temp}c] ' M117='Heating EXT ...'
     M109 S{printer["gcode_macro _MY_VARIABLES"].print_min_extrusion_temp}    ; conditional wait to reach minimum temp
     G1 E{printer["gcode_macro _MY_VARIABLES"].print_extruder_to_nozzle} F600 ; distance to load through to the melt zone (or nozzle)
     _MSG M118='Resetting Extruder target temp [{printer.extruder.target}c] ' M117='Reset EXT temp'    
     M104 S{printer.extruder.target}
     M117
   {% else %}
     G1 E{printer["gcode_macro _MY_VARIABLES"].print_extruder_to_nozzle} F600 ; distance to load through to the melt zone (or nozzle)
   {% endif %}

   _MSG M118='Filament Loaded' M117='EXT Loaded'
   RESTORE_GCODE_STATE NAME=__load_filament

#####################################################################
[gcode_macro unload_filament] ; wrapper for unload macro so we can manage and
; control minimum extruder temp easily (Note: coded like this as you
; cant dynamically change jinga2 vars during a macro)  
#####################################################################

gcode:
  SAVE_GCODE_STATE NAME=__unload_filament

  ; if target temp is <= minimum extrusion temp + 10c to work with, heat HE0 to minimum
  {% if printer.extruder.temperature <= printer["gcode_macro _MY_VARIABLES"].print_min_extrusion_temp|int %}
     _MSG M118='Heating Extruder to minimum extrude temp [{printer["gcode_macro _MY_VARIABLES"].print_min_extrusion_temp}c] ' M117='Heating EXT ...'
     M109 S{printer["gcode_macro _MY_VARIABLES"].print_min_extrusion_temp}    ; conditional wait to reach minimum temp
     TIP
     ;_ERCF_FORM_TIP_STANDALONE                                                ; form tip and eject
     _MSG M118='Resetting Extruder target temp [{printer.extruder.target}c] ' M117='Reset EXT temp' 
     M104 S{printer.extruder.target}
     M117
  {% else %}
     TIP
     ;_ERCF_FORM_TIP_STANDALONE                                                ; form tip and eject
  {% endif %}

   _MSG M118='Filament unloaded' M117='EXT Unloaded'
   RESTORE_GCODE_STATE NAME=__unload_filament

